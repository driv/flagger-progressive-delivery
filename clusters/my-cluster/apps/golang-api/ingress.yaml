apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: golang-api
  namespace: default
  labels:
    app: golang-api
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    # http://api.172-18-0-3.nip.io
    - host: "api.172-18-0-3.nip.io"
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: golang-api
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: golang-api
  namespace: default
spec:
  selector:
    app: golang-api
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
# apiVersion: flagger.app/v1beta1
# kind: Canary
# metadata:
#   name: golang-api
#   namespace: default
# spec:
#   provider: nginx
#   # deployment reference
#   targetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: golang-api
#   # ingress reference
#   ingressRef:
#     apiVersion: networking.k8s.io/v1
#     kind: Ingress
#     name: golang-api
#   # HPA reference (optional)
#   # autoscalerRef:
#   #   apiVersion: autoscaling/v2
#   #   kind: HorizontalPodAutoscaler
#   #   name: golang-api
#   # the maximum time in seconds for the canary deployment
#   # to make progress before it is rollback (default 600s)
#   progressDeadlineSeconds: 60
#   service:
#     # ClusterIP port number
#     port: 80
#     # container port number or name
#     targetPort: http
#   analysis:
#     # schedule interval (default 60s)
#     interval: 10s
#     # max number of failed metric checks before rollback
#     threshold: 10
#     # max traffic percentage routed to canary
#     # percentage (0-100)
#     maxWeight: 50
#     # canary increment step
#     # percentage (0-100)
#     stepWeight: 5
#     # NGINX Prometheus checks
#     metrics:
#     - name: request-success-rate
#       # minimum req success rate (non 5xx responses)
#       # percentage (0-100)
#       thresholdRange:
#         min: 99
#       interval: 1m
#     # testing (optional)
#     webhooks:
#       - name: acceptance-test
#         type: pre-rollout
#         url: http://flagger-loadtester.test/
#         timeout: 30s
#         metadata:
#           type: bash
#           cmd: "curl -sd 'test' http://golang-api-canary/status | grep OK"
#       - name: load-test
#         url: http://flagger-loadtester.test/
#         timeout: 5s
#         metadata:
#           cmd: "hey -z 1m -q 10 -c 2 http://api.172-18-0-3.nip.io/"